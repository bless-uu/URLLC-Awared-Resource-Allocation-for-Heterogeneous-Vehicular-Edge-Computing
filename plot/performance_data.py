import numpy as np
import matplotlib.pyplot as plt
from matplotlib.pyplot import MultipleLocator
" --------------------------------------------------------------------------第一组数据, 1500GHz. mmWave 20 , dsrc 50, cv2i 50 --------------------------------------------------------------- "
Data_size = [i/10 for i in range(1,40,1)]
"N = 10 "
mmWave_5 = [22.70867958, 22.88097492, 23.06130918, 23.2503046, 23.44865658, 23.65714565, 23.87665214, 24.10817416, 24.35284987, 24.61198535, 24.88708986, 25.17992108, 25.49254385, 25.82740773, 26.18745123, 26.57624459, 26.99819029, 27.45881184, 27.96518353, 28.52659447, 29.15562273, 29.8699752, 30.69587587, 31.67493361, 32.88003766, 34.46023267, 36.81913289, 42.3492236, 46.40787402, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
dsrc_5   = [38.90235009494572, 43.82976529051195, 52.02700285734814, 65.54441795129918, 90.2269041140103, 149.148283800537, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
cv2i_5   = [37.51352554175469, 37.619362359259604, 37.729244290726015, 37.84345494638433, 37.96230868068179, 38.08615520297879, 38.21538508636125, 38.35043639304131, 38.491802699450616, 38.64004289158185, 38.79579322088997, 38.95978227720147, 39.13284976884013, 39.315970334193416, 39.51028409434184, 39.71713637499954, 39.9381301120399, 40.1751961341307, 40.430689179913685, 40.707521857011784, 41.00935609021264, 41.34088446819068, 41.70825744515687, 42.119757741190355, 42.586916326729025, 43.126469983800035, 43.76405957138283, 44.54193673367227, 45.53737609429969, 46.91678838964694, 49.16533182726008, 56.002756267686756, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
"N = 10 "
mmWave_10 = [49.53373668, 50.26600137, 51.070287, 51.95921421, 52.9489316, 54.0605839, 55.3226473, 56.77484206, 58.47513375, 60.51339526, 63.04146042, 66.35214731, 71.16015943, 80.60718927, np.inf, np.inf, np.nan, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
dsrc_10   = [67.34485051859372, 89.49788258717169, 252.03644319749304, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
cv2i_10   =  [61.24541664619724, 61.66194175444842, 62.10885804987495, 62.59063462261333, 63.11280359892901, 63.68232654356309, 64.30813373689055, 65.00194450022582, 65.77956500354504, 66.66304154278406, 67.68445018094238, 68.89308703624457, 70.37053922970672, 72.26699417741963, 74.90939749352113, 79.27293746355923, 94.0110749935184, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
# 当xi_comm 或者 xi_comp 小于 rho的时候，公式里的分母也是 0
plot_data_1 = [mmWave_5,dsrc_5,cv2i_5,mmWave_10,dsrc_10,cv2i_10]
x_r = [i / 10 for i in range(1, 40, 1)]
MakerColor = ["r", "g", "b", "m"]
MakerShape = ["*", "o", "v", "o"]
LineShape = ["-", "-.", "-"]
MarkEvery = 20
for i in range(len(plot_data_1)):
    #MakerSC = MakerShape[i%3] + MakerColor[int(i/3)] + LineShape[i]
    MakerSC = MakerShape[i % 3] + MakerColor[int(i / 3)]+ LineShape[0]
    plt.plot(x_r, plot_data_1[i], MakerSC, markevery=2)
font2 = {'family': 'Times New Roman',
         'weight': 'normal',
         'size': 10}  # 字体大小，相当于也是leged框的大小
plt.legend(["mmWave: "+r"$N$"+" = 5", "DSRC: "+r"$N$"+" = 5", "C-V2I: "+r"$N$"+" = 5",
            "mmWave: "+r"$N$"+" = 10", "DSRC: "+r"$N$"+" = 10", "C-V2I: "+r"$N$"+" = 10"],
           loc='upper left', bbox_to_anchor=(0.65, 1), fancybox=True, shadow=False, prop=font2)
plt.xscale("linear")
plt.ylabel("Delay upper bound " + r'$\omega_{1}$')
plt.xlabel("Task arrival rate " + r'$\rho_{1}$' + " (Mbps)")
plt.grid(which="both", linestyle='--')  # 背景网格
plt.show()


""

" --------------------------------------------------------------------------第二组数据, 1500GHz. mmWave 20 , dsrc 50, cv2i 50 --------------------------------------------------------------- "
Data_size = [i/10 for i in range(1,40,1)]
"N = 10 "
mmWave_5 = [23.08419475, 23.66021918, 24.26368997, 24.89658107, 25.56106084, 26.25951697, 26.99458524, 27.76918321, 28.58654961, 29.45029073, 30.3644353, 31.33349992, 32.36256743, 33.45738157, 34.62446218, 35.87124655, 37.20626473, 38.63935915, 40.18196333, 41.84746043, 43.65165218, 45.61338364, 47.75539413, 50.10550664, 52.69834291, 55.57789172, 58.80153782, 62.44676141, 66.62314305, 71.49610868, 77.34077388, 84.69162843, 94.93335559, 116.23985125, np.inf, np.inf, np.inf, np.inf, np.inf]
dsrc_5   = [38.15728777758419, 39.21575228435258, 40.55237020769171, 42.158165370827916, 44.04448527005857, 46.23798105047484, 48.77983215217525, 51.72748865618195, 55.15863594538209, 59.17785680337545, 63.927228575930826, 69.6032703818023, 76.48489351991861, 84.98179440463673, 95.72418659337987, 109.74653828235297, 128.92788408818396, 157.40936204293644, 212.14455344825242, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
cv2i_5   = [38.861368386738434, 41.235650023457985, 49.31518747632726, 43.09697870707539, 41.20627215017112, 40.56018376881046, 40.41046667235102, 40.54374278711793, 40.870885271459315, 41.347659308616564, 41.95022921508715, 42.665551361939364, 43.48700679107776, 44.41221990500726, 45.44191166980255, 46.579297139007075, 47.8298009124735, 49.200981980718296, 50.70261831396668, 52.34693562889847, 54.1489893098034, 56.127232057338624, 58.30432960661315, 60.708332072065645, 63.374385403717014, 66.34730924605213, 69.68564867332353, 73.46841098137152, 77.80712461112785, 82.86965887833803, 88.93416945688475, 96.53891913264764, 107.07328090595902, 128.71700690226749, np.inf, np.inf, np.inf, np.inf, np.inf]
"N = 10 "
mmWave_10 = [51.30222811, 53.99544084, 56.96276041, 60.24747417, 63.90255889, 67.99361797, 72.6029986, 77.83571234, 83.82821713, 90.761955, 98.88527452, 108.55133013, 120.28982621, 134.96218385, 154.1762187, 181.91959915, 246.68756666, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
dsrc_10   = [64.89401376671358, 69.5398430507948, 75.03715342331627, 81.80496231326902, 90.85002895787575, 106.73044960722035, 125.55608119514481, 163.29563128937895, 267.4942951925332, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
cv2i_10   =  [63.430671692891295, 66.26553930327908, 69.3975687858132, 72.87208012580383, 76.74459060527336, 81.083862168919, 85.97616722607418, 91.53141100515472, 97.89219017099076, 105.24771474275619, 113.85627322366511, 124.08391367533815, 136.47733999250295, 151.9208226355541, 172.0535988879589, 200.90773747761364, 267.0433035015069, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
# 当xi_comm 或者 xi_comp 小于 rho的时候，公式里的分母也是 0
plot_data_1 = [mmWave_5,dsrc_5,cv2i_5,mmWave_10,dsrc_10,cv2i_10]
x_r = [i / 10 for i in range(1, 40, 1)]
MakerColor = ["r", "g", "b", "m"]
MakerShape = ["*", "o", "v", "o"]
LineShape = ["-", "-.", "-"]
MarkEvery = 20
for i in range(len(plot_data_1)):
    #MakerSC = MakerShape[i%3] + MakerColor[int(i/3)] + LineShape[i]
    MakerSC = MakerShape[i % 3] + MakerColor[int(i / 3)]+ LineShape[0]
    plt.plot(x_r, plot_data_1[i], MakerSC, markevery=2)
font2 = {'family': 'Times New Roman',
         'weight': 'normal',
         'size': 10}  # 字体大小，相当于也是leged框的大小
plt.legend(["mmWave: "+r"$N$"+" = 5", "DSRC: "+r"$N$"+" = 5", "C-V2I: "+r"$N$"+" = 5",
            "mmWave: "+r"$N$"+" = 10", "DSRC: "+r"$N$"+" = 10", "C-V2I: "+r"$N$"+" = 10"],
           loc='upper left', bbox_to_anchor=(0.65, 1), fancybox=True, shadow=False, prop=font2)
plt.xscale("linear")
plt.ylabel("Delay upper bound " + r'$\omega_{1}$')
plt.xlabel("Task arrival rate " + r'$\rho_{1}$' + " (Mbps)")
plt.grid(which="both", linestyle='--')  # 背景网格
plt.show()


" --------------------------------------------------------------------------第三组数据, 1500GHz. mmWave 20 , dsrc 50, cv2i 50 --------------------------------------------------------------- "
Data_size = [i/10 for i in range(1,50,1)]
"N = 10 "
mmWave_5 = [22.60640262, 22.75229449, 22.89818637, 23.04407824, 23.18997012, 23.33586199, 23.48175386, 23.62764574, 23.77353761, 23.91942949, 24.06532136, 24.21121324, 24.35710511, 24.50299698, 24.64888886, 24.79478073, 24.94067261, 25.08656448, 25.23245635, 25.37834823, 25.5242401, 25.67013198, 25.81602385, 25.96191573, 26.1078076, 26.25369947, 26.39959135, 26.54548322, 26.6913751, 26.83726697, 26.98315884, 27.12905072, 27.27494259, 28.46174729, 30.03737953, 31.61301178, 33.18864402, 34.76427626, 36.3399085, 37.91554074, 39.49117298, 41.06680522, 42.64243746, 44.2180697, 45.79370194, 47.36933418, 48.94496642, 50.52059866, 52.0962309]
dsrc_5   = [39.079739928702296, 39.257129762458874, 39.43451959621545, 39.61190942997204, 39.789299263728616, 39.966689097485194, 40.14407893124178, 40.32146876499836, 40.498858598754936, 40.676248432511514, 40.85363826626809, 41.03102810002467, 41.20841793378125, 41.38580776753783, 41.563197601294405, 41.74058743505099, 41.91797726880757, 42.09536710256415, 42.27275693632073, 42.45014677007731, 42.62753660383389, 42.80492643759047, 42.982316271347045, 43.15970610510362, 43.3370959388602, 43.51448577261678, 43.69187560637336, 43.869265440129944, 44.04665527388652, 44.22404510764311, 44.401434941399685, 44.578824775156264, 44.75621460891284, 46.19924966495202, 48.11505986952308, 50.03087007409414, 51.9466802786652, 53.86249048323626, 55.7783006878073, 57.694110892378376, 59.60992109694941, 61.52573130152048, 63.44154150609155, 65.35735171066261, 67.27316191523364, 69.18897211980469, 71.10478232437576, 73.02059252894684, 74.9364027335179]
cv2i_5   = [37.54459446027321, 37.57566337879173, 37.606732297310245, 37.637801215828766, 37.66887013434729, 37.6999390528658, 37.73100797138432, 37.76207688990284, 37.79314580842136, 37.82421472693988, 37.8552836454584, 37.886352563976914, 37.91742148249543, 37.948490401013956, 37.97955931953247, 38.010628238050984, 38.04169715656951, 38.072766075088026, 38.10383499360654, 38.13490391212506, 38.16597283064358, 38.197041749162096, 38.22811066768062, 38.25917958619914, 38.29024850471765, 38.321317423236174, 38.352386341754695, 38.38345526027321, 38.41452417879173, 38.44559309731025, 38.476662015828765, 38.507730934347286, 38.53879985286581, 39.67822508052912, 41.23167100645505, 42.78511693238097, 44.3385628583069, 45.89200878423283, 47.44545471015874, 48.998900636084684, 50.552346562010584, 52.105792487936526, 53.65923841386247, 55.21268433978838, 56.76613026571428, 58.31957619164021, 59.87302211756615, 61.42646804349209, 62.97991396941801]
"N = 10 "
mmWave_10 = [49.69395274, 50.27752024, 50.86108774, 51.44465523, 52.02822273, 52.61179023, 53.19535772, 53.77892522, 54.36249272, 54.94606021, 55.52962771, 56.11319521, 56.6967627, 57.2803302, 57.8638977, 58.44746519, 61.50168588, 64.94473411, 68.38778234, 71.83083057, 75.2738788, 78.71692703, 82.15997526, 85.60302349, 89.04607172, 92.48911995, 95.93216818, 99.37521641, 102.81826464, 106.26131287, 109.7043611, 113.14740933, 116.59045756, 120.03350579, 123.47655401, 126.91960224, 130.36265047, 133.8056987, 137.24874693, 140.69179516, 144.13484339, 147.57789162, 151.02093985, 154.46398808, 157.90703631, 161.35008454, 164.79313277, 168.236181, 171.67922923]
dsrc_10   = [67.92841801512705, 68.51198551166038, 69.09555300819372, 69.67912050472705, 70.26268800126039, 70.84625549779372, 71.42982299432705, 72.01339049086037, 72.59695798739371, 73.18052548392704, 73.76409298046038, 74.34766047699371, 74.93122797352704, 75.51479547006038, 76.09836296659371, 76.68193046312705, 79.73615115390038, 83.17919938344704, 86.6222476129937, 90.06529584254037, 93.50834407208707, 96.95139230163375, 100.39444053118038, 103.83748876072704, 107.2805369902737, 110.7235852198204, 114.16663344936708, 117.60968167891367, 121.05272990846035, 124.49577813800704, 127.9388263675537, 131.38187459710042, 134.824922826647, 138.26797105619374, 141.71101928574038, 145.15406751528698, 148.5971157448338, 152.0401639743803, 155.4832122039271, 158.92626043347371, 162.3693086630203, 165.8123568925671, 169.25540512211364, 172.69845335166042, 176.14150158120708, 179.58454981075369, 183.02759804030043, 186.47064626984698, 189.9136944993937]
cv2i_10   =  [61.30377339585058, 61.36213014550391, 61.42048689515724, 61.478843644810574, 61.53720039446391, 61.595557144117244, 61.65391389377058, 61.712270643423906, 61.77062739307724, 61.828984142730576, 61.88734089238391, 61.94569764203724, 62.00405439169057, 62.06241114134391, 62.12076789099724, 62.17912464065058, 64.70813458454393, 67.62597206721058, 70.54380954987724, 73.46164703254391, 76.3794845152106, 79.29732199787728, 82.21515948054392, 85.13299696321059, 88.05083444587723, 90.96867192854393, 93.88650941121062, 96.80434689387721, 99.72218437654391, 102.64002185921058, 105.55785934187725, 108.47569682454397, 111.39353430721053, 114.31137178987728, 117.2292092725439, 120.14704675521054, 123.0648842378773, 125.98272172054385, 128.90055920321063, 131.81839668587725, 134.73623416854383, 137.65407165121061, 140.5719091338772, 143.48974661654395, 146.40758409921062, 149.3254215818772, 152.24325906454396, 155.16109654721052, 158.07893402987725]
# 当xi_comm 或者 xi_comp 小于 rho的时候，公式里的分母也是 0
plot_data_1 = [mmWave_5,dsrc_5,cv2i_5,mmWave_10,dsrc_10,cv2i_10]
x_r = [i/10 for i in range(1,50,1)]
MakerColor = ["r", "g", "b", "m"]
MakerShape = ["*", "o", "v", "o"]
LineShape = ["-", "-.", "-"]
MarkEvery = 20
for i in range(len(plot_data_1)):
    #MakerSC = MakerShape[i%3] + MakerColor[int(i/3)] + LineShape[i]
    MakerSC = MakerShape[int(i / 3)] + MakerColor[i % 3]+ LineShape[0]
    plt.plot(x_r, plot_data_1[i], MakerSC, markevery=2)
font2 = {'family': 'Times New Roman',
         'weight': 'normal',
         'size': 10}  # 字体大小，相当于也是leged框的大小
plt.legend(["mmWave: "+r"$N$"+" = 5", "DSRC: "+r"$N$"+" = 5", "C-V2I: "+r"$N$"+" = 5",
            "mmWave: "+r"$N$"+" = 10", "DSRC: "+r"$N$"+" = 10", "C-V2I: "+r"$N$"+" = 10"],
           loc='upper left', bbox_to_anchor=(0.2, 1), fancybox=True, shadow=False, prop=font2)
plt.xscale("linear")
plt.ylabel("Delay upper bound " + r'$\omega_{1}$')
plt.xlabel("Task busrtness measure " + r'$\sigma_{1}$' + " (Mbps)")
plt.grid(which="both", linestyle='--')  # 背景网格
plt.show()


" --------------------------------------------------------------------------第三组数据, 1500GHz. mmWave 20 , dsrc 50, cv2i 50 --------------------------------------------------------------- "

"N = 10 "
mmWave_s = [47.35805325, 20.91784213, 18.50771445, 17.09766145, 16.09715221, 15.32107151, 14.68695433, 14.15080829, 13.68637265, 13.27670814, 12.91024847, 12.57874371, 12.27610231, 11.99769824, 11.73993556, 11.49996364, 11.2754844, 11.06461815, 10.86580782, 10.67774908, 10.49933848, 10.32963417, 10.16782581, 10.0132112, 9.86517783, 9.72318822, 9.58676818, 9.45549722, 9.32900073, 9.20694357, 9.08902467, 8.9749726, 8.8645418, 8.75750936, 8.65367236, 8.5528455, 8.45485918, 8.35955772, 8.26679791, 8.17644768, 8.08838502, 8.00249694, 7.91867863, 7.83683268, 7.7568684, 7.67870119, 7.60225207, 7.52744712, 7.45421712, 7.3824971]
dsrc_s  = [157.79905744310477, 83.4415992929205, 76.66362888609687, 72.69815536995608, 69.8844364078748, 67.70187484610854, 65.91855543277724, 64.410758965724, 63.104632722120016, 61.95253861916499, 60.92194890509625, 59.98966241086228, 59.13854798571315, 58.35559587918584, 57.63069329880401, 56.95582341388062, 56.324523389625874, 55.73150700938255, 55.17239532415333, 54.643520222013706, 54.141778439815866, 53.664521229624455, 53.20946971519362, 52.774649078755345, 52.358336764605156, 51.959021263035964, 51.57536898262389, 51.20619737784795, 50.85045296607869, 50.50719320378175, 50.17557143643558, 49.85482431708534, 49.54426122301698, 49.24325530144815, 48.95123585230851, 48.66768181545049, 48.392116175533914, 48.12410113366389, 47.863233923047616, 47.60914316826177, 47.361485705524345, 47.11994379564845, 46.884222672884704, 46.654048382216686, 46.429165865310104, 46.20933726157903, 45.994340395993916, 45.78396742952896, 45.578023651699354, 45.376326397606014]
cv2i_s  = [63.54658749172674, 35.393245511786986, 32.826959310774015, 31.325545265839654, 30.26021040709665, 29.433845391813716, 28.758642089388065, 28.18775773388257, 27.693230087027203, 27.257022340279683, 26.866818783259443, 26.51383495153088, 26.191584620879635, 25.895142018384313, 25.620678222077423, 25.365157886459766, 25.12613404249121, 24.901605214206416, 24.689913436799962, 24.489669883757323, 24.2996995925283, 24.118999689853137, 23.946707343893905, 23.782074845929053, 23.624449999110627, 23.473260513170125, 23.328001461549384, 23.18822510693613, 23.05353257802042, 22.923567007433274, 22.79800783346001, 22.676566036432607, 22.558980131653627, 22.44501277910107, 22.334447899384273, 22.22708820786103, 22.12275309620588, 22.0212768042878, 21.92250683588733, 21.82630258023649, 21.732534108104907, 21.641081116563846, 21.551832000924907, 21.46468303589334, 21.379537650866954, 21.29630578668309, 21.214903323069993, 21.13525156767701, 21.057276798903082, 20.980909855866443]
"N = 10 "
mmWave_h = [52.098135, 22.80925037, 20.13945505, 18.57748267, 17.46917837, 16.60948258, 15.90704549, 15.31313497, 14.79866094, 14.34485911, 13.938917, 13.57169584, 13.2364478, 12.92804842, 12.64251435, 12.3766878, 12.12802312, 11.8944381, 11.67420791, 11.46588769, 11.2682551, 11.08026681, 10.90102519, 10.72975237, 10.56576985, 10.40848225, 10.25736429, 10.11195017, 9.97182493, 9.8366173, 9.70599379, 9.57965374, 9.4573251, 9.33876097, 9.22373654, 9.11204658, 9.0035032, 8.89793394, 8.79518016, 8.69509558, 8.59754503, 8.50240336, 8.40955445, 8.3188904, 8.23031075, 8.14372179, 8.05903602, 7.97617158, 7.89505176, 7.81560462]
dsrc_h  = [76.31226400251964, 40.80429380342146, 37.567604744877215, 35.67396933910465, 34.33033210970358, 33.28809192531797, 32.43650212976383, 31.7164830039043, 31.09276760415949, 30.54260728276095, 30.050469039133276, 29.60527360241703, 29.198840321935897, 28.82495664224177, 28.478793394306923, 28.15652229523669, 27.85505714290924, 27.571873606501534, 27.304880603365405, 27.05232649738872, 26.812729385099864, 26.58482440800189, 26.367523332690396, 26.15988312302348, 25.96108120574296, 25.77039578853681, 25.58719004053809, 25.410899259937963, 25.241020376422533, 25.077103296503374, 24.91874371664096, 24.765577115217713, 24.617273698674804, 24.4735341255545, 24.334085869043843, 24.1986801069177, 24.06708904969933, 23.939103634969186, 23.81453152921248, 23.693195389257568, 23.574931343858072, 23.4595876627927, 23.347023586362226, 23.23710829263162, 23.129719983412, 23.02474507296755, 22.922077465897438, 22.82161791268293, 22.723273433086906, 22.62695679900938]
cv2i_h   = [67.82247249607919, 38.533587861916814, 35.863792548334914, 34.30182016219592, 33.19351586934471, 32.33382007850128, 31.631382987961857, 31.037472466086243, 30.522998439966322, 30.06919660073461, 29.663254493628855, 29.296033339828043, 28.96078529842357, 28.65238591936147, 28.3668518441524, 28.101025299050917, 27.852360618467088, 27.618775598494583, 27.39854540163638, 27.190225184165232, 26.9925925923511, 26.80460430283903, 26.62536268215525, 26.454089863341686, 26.290107343709312, 26.132819750116873, 25.981701790195128, 25.836287667503466, 25.69616242257493, 25.56095479407909, 25.430331290699492, 25.303991235389706, 25.181662596675018, 25.063098461612427, 24.94807403542094, 24.83638407613923, 24.727840690748696, 24.62227143331528, 24.519517656805817, 24.41943307902885, 24.321882530161844, 24.226740854953132, 24.133891947227987, 24.0432278980144, 23.95464824161176, 23.86805928639271, 23.783373519161263, 23.700509073573386, 23.61938925452589, 23.539942111587845]
# 当xi_comm 或者 xi_comp 小于 rho的时候，公式里的分母也是 0
plot_data_1 = [mmWave_s,dsrc_s,cv2i_s,mmWave_h,dsrc_h,cv2i_h]
y_r = [i/100000 for i in range(1,100000,2000)]

MakerColor = ["r", "g", "b", "m","m","m"]
MakerShape = ["*", "o", "v", "o"]
LineShape = ["-", "-.", "-"]
MarkEvery = 20
for i in range(len(plot_data_1)):
    #MakerSC = MakerShape[i%3] + MakerColor[int(i/3)] + LineShape[i]
    MakerSC = MakerShape[i % 3] + MakerColor[i]+ LineShape[int(i / 3)]
    plt.plot(plot_data_1[i], y_r, MakerSC, markevery=4)
font2 = {'family': 'Times New Roman',
         'weight': 'normal',
         'size': 10}  # 字体大小，相当于也是leged框的大小
plt.legend(["mmWave: " + r'$\varphi^{mmw}_{i} = 1$',
            "DSRC: "   + r'$\varphi^{dsrc} = 1$',
            "C-V2I: "  + r'$\varphi^{cv2i} = 1$',
            "mmWave: " + r'$\varphi^{mmw} = \frac{1}{3}$',
            "DSRC: "   + r'$\varphi^{dsrc} = \frac{1}{3}$',
            "C-V2I: "  + r'$\varphi^{cv2i} = \frac{1}{3}$'],
           loc='upper left', bbox_to_anchor=(0.01, 0.6), fancybox=True, shadow=False, prop=font2)
x_major_locator = MultipleLocator(50)
ax = plt.gca()
ax.xaxis.set_major_locator(x_major_locator)
plt.yscale("log")
plt.xscale("log")

plt.ylabel("Violation Probability  " + r'$\epsilon_{1}$')
plt.xlabel("Delay upper bound " + r'$\omega_{1}$')


plt.grid(which="both", linestyle='--')  # 背景网格
plt.show()




Data_size = [i/10 for i in range(1,40,1)]
"500 GHz "
mmWave_500GHz = [78.42820794, 79.63081301, 80.96196056, 82.45236818, 84.14588291, 86.10838294, 88.44583959, 91.34587704, 95.19293821, 101.00499315, 113.92826832, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
dsrc_500GHz = [95.1595062267213, 98.84219359533739, 103.72094610783277, 111.18517374885514, 131.59302659484376, 178.1655625722951, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
cv2i_500GHz = [93.0686800737493, 94.07790364290106, 95.20522857800421, 96.48058560853576, 97.94694955753724, 99.66922828596847, 101.752309494685, 104.38260217467793, 107.94318038101653, 113.4504646143443, 126.0489180074843, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
"1000 GHZ"
"1500 GHZ"
mmWave_2000GHz = [16.81302092, 16.94941966, 17.09336729, 17.24561901, 17.40705237, 17.57869602, 17.7617676, 17.95772449, 18.16833307, 18.39576515, 18.64273595, 18.91270655, 19.21019163, 19.5412455, 19.9142676, 20.34141829, 20.841302, 21.44458369, 22.2074982, 23.25199614, 24.93994416, 30.3949744, 28.40233119, 29.88308621, 33.35722772, 39.61629512, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan]
dsrc_2000GHz = [18.356413193672424, 18.640680877963543, 18.958993559462915, 19.320320369215708, 19.737819077402044, 20.231953228527452, 20.83719067276418, 21.61874060125799, 22.725476353513844, 24.651637926862698, 31.55579957461021, 27.280788310896263, 28.680829492948206, 31.514262938134287, 35.84995423068494, 42.44371850309588, 53.56989610408718, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
cv2i_2000GHz = [18.127702320048012, 18.176464419866456, 18.22657799510197, 18.278107827410587, 18.331123417358217, 18.38569945411655, 18.441916345093745, 18.499860814918158, 18.559626584966747, 18.621315146795027, 18.68503664548343, 18.7509108921947, 18.819068529308037, 18.88965237657866, 18.96281899315901, 19.038740498398838, 19.117606704638455, 19.199627628430413, 19.285036463738525, 19.374093123008066, 19.467088481447902, 19.564349499059425, 19.66624544767461, 19.77319554202272, 19.885678372723433, 20.004243677211516, 20.129527180360043, 20.262269518561652, 20.403340674484138, 20.55377196787665, 20.71479859224946, 20.887917165509105, 21.074965140110343, 21.278232861367062, 21.50062583595036, 21.745906889072657, 22.019070613886303, 22.326947598053792, 22.67923160719454]

"5000*GHZ"
mmWave_5000GHz = [8.8388479, 9.01096554, 9.25220759, 9.55706933, 9.92552556, 10.36133084, 10.87149508, 11.46638688, 12.16030952, 12.97257534, 13.92924419, 15.06587165, 16.43192247, 18.09811775, 20.16933078, 22.80895639, 26.29015374, 31.1234521, 38.49196938, 53.88463675, np.inf, np.inf, np.inf, np.inf, np.inf, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan]
dsrc_5000GHz = [14.056628700642275, 15.206148313087503, 16.584056024115092, 18.258552435922297, 20.328604043686035, 22.943248575100142, 26.337762316710368, 30.907251252375882, 37.37466141722294, 47.24966687921409, 64.61382580376176, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
cv2i_5000GHz = [13.10322936243775, 13.129941035415193, 13.15724392593022, 13.18515951980503, 13.213710473045417, 13.242920698359661, 13.272815459824816, 13.303421476638857, 13.3347670370256, 13.366882123508471, 13.399798550942581, 13.433550118896784, 13.46817278021404, 13.503704827856033, 13.540187102464952, 13.577663223461588, 13.616179846956882, 13.655786954299057, 13.696538175729652, 13.738491154402787, 13.781707956963002, 13.826255538015555, 13.872206267207279, 13.91963852932716, 13.968637409912457, 14.01929548141019, 14.07171370812799, 14.12600249218619, 14.182282887684934, 14.240688016632074, 14.301364728251443, 14.364475553665052, 14.43020102138146, 14.498742416583415, 14.57032509037084, 14.645202455973987, 14.72366085050832, 14.806025497459073, 14.89266788319165]
"10000*GHZ"
mmWave_10000GHz = [5.2089906, 5.37535697, 5.55572042, 5.75157156, 5.96464738, 6.19697958, 6.45095533, 6.72939448, 7.03564839, 7.37372771, 7.74846959, 8.16575912, 8.63282708, 9.15865667, 9.75454959, 10.43493111, 11.21852355, 12.13010882, 13.20327196, 14.48486774, 16.04272506, 17.98001582, 20.46523136, 23.80667222, 28.70531768, 38.12982358, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan]

dsrc_10000GHz = [7.885359643470815, 8.314337679700223, 8.794553232278286, 9.33521755378003, 9.947883780762746, 10.647235804565067, 11.452219943771587, 12.387707975218872, 13.487010295712214, 14.795800999492023, 16.37849584464165, 18.329135756822435, 20.79116029505486, 23.99650431226904, 28.35304957160934, 34.684356585789835, 45.23145475096499, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
cv2i_10000GHz = [7.500281642159038, 7.510538123216825, 7.5209615232994365, 7.53155590123679, 7.5423254594855695, 7.553274550974407, 7.564407686361908, 7.575729541737772, 7.587244966799845, 7.59895899354288, 7.610876845497887, 7.623003947564502, 7.635345936482628, 7.647908671993901, 7.660698248748223, 7.673721009015867, 7.68698355627146, 7.700492769722587, 7.714255819862972, 7.728280185138179, 7.742573669820711, 7.757144423201389, 7.772000960215049, 7.787152183631173, 7.802607407954112, 7.818376385193449, 7.834469332682887, 7.8508969631462415, 7.867670517231933, 7.884801798763246, 7.902303212981024, 7.920187808088899, 7.93846932044934, 7.957162223822371, 7.976281783088831, 7.995844112957405, 8.015866242220723, 8.036366184202091, 8.057363014122656]
"20000*GHZ"
mmWave_20000GHz = [6.41965639, 6.73712272, 7.08688393, 7.47397367, 7.90451484, 8.38602954, 8.92786117, 9.5417595, 10.24270766, 11.0501175, 11.98960287, 13.09569153, 14.41612657, 16.01900211, 18.0052959, 20.53262018, 23.86538461, 28.50042672, 35.59837693, 50.60869733, np.inf, np.inf, np.inf, np.inf, np.inf, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan, np.nan]
dsrc_20000GHz = [12.105039544664551, 13.217525156159576, 14.542274034083885, 16.14434831796794, 18.118070904982677, 20.605540502433445, 23.83139309412661, 28.173752278322404, 34.32690299959982, 43.748300195777915, 60.41356598620148, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf, np.inf]
cv2i_20000GHz = [11.174643110960076, 11.201354783937518, 11.228657674452547, 11.256573268327354, 11.285124221567743, 11.314334446881986, 11.344229208347143, 11.374835225161183, 11.406180785547926, 11.438295872030798, 11.471212299464908, 11.50496386741911, 11.539586528736365, 11.575118576378358, 11.61160085098728, 11.649076971983915, 11.687593595479207, 11.727200702821383, 11.767951924251978, 11.809904902925114, 11.853121705485329, 11.89766928653788, 11.943620015729604, 11.991052277849487, 12.040051158434782, 12.090709229932514, 12.143127456650317, 12.197416240708517, 12.253696636207259, 12.312101765154402, 12.372778476773767, 12.435889302187377, 12.501614769903787, 12.570156165105741, 12.641738838893167, 12.716616204496312, 12.795074599030645, 12.8774392459814, 12.964081631713977]

plot_data_2 = [mmWave_500GHz ,dsrc_500GHz, cv2i_500GHz,
               mmWave_2000GHz,dsrc_2000GHz,cv2i_2000GHz,
               mmWave_10000GHz,dsrc_10000GHz,cv2i_10000GHz]
x_r = [i / 10 for i in range(1, 40, 1)]
MakerColor = ["r", "g", "b", "m"]
MakerShape = ["*", "o", "v", "o"]
LineShape = ["-", "-.", "-"]
MarkEvery = 20
for i in range(len(plot_data_2)):
    #MakerSC = MakerShape[i%3] + MakerColor[int(i/3)] + LineShape[i]
    MakerSC = MakerShape[i % 3] + MakerColor[int(i / 3)]+ LineShape[0]
    plt.plot(x_r, plot_data_2[i], MakerSC, markevery=2)
font2 = {'family': 'Times New Roman',
         'weight': 'normal',
         'size': 10}  # 字体大小，相当于也是leged框的大小

plt.legend(["mmWave: "+r"$f_{E}$"+" = 500GHz",  "DSRC: "+r"$f_{E}$"+" = 500GHz",  "C-V2I: "+r"$f_{E}$"+" = 500GHz",
            "mmWave: "+r"$f_{E}$"+" = 2000GHz", "DSRC: "+r"$f_{E}$"+" = 2000GHz",  "C-V2I: "+r"$f_{E}$"+" = 2000GHz",
            "mmWave: "+r"$f_{E}$"+" = 10000GHz","DSRC: "+r"$f_{E}$"+" = 10000GHz", "C-V2I: "+r"$f_{E}$"+" = 10000GHz"],
           loc='upper left', bbox_to_anchor=(0.55, 1), fancybox=True, shadow=False, prop=font2)
plt.xscale("linear")
#plt.yscale("log")
plt.ylabel("Delay upper bound " + r'$\omega_{1}$')
plt.xlabel("Task arrival rate " + r'$\rho_{1}$' + " (Mbps)")
plt.grid(which="both", linestyle='--')  # 背景网格
plt.show()